# frozen_string_literal: true

module TurboMaterial
  class InstallGenerator < Rails::Generators::Base
    source_root File.expand_path('../templates', __FILE__)

    START_MARKER = '// TurboMaterial raw CSS. This section is auto-generated by the turbo_material installer.'.freeze
    END_MARKER = '// End of auto-generated TurboMaterial raw CSS. TurboMaterial version:'.freeze

    def update_tailwind_config
      tailwind_css_path = TurboMaterial::Engine.root.join('app/assets/dist/turbo_material/tailwind.css')
      css_content = File.read(tailwind_css_path)
      css_content.gsub!(/\/\*.*?\*\//m, '')
      css_content.gsub!(/\{[^}]*}/m, '{}')
      css_content.gsub!(/\\\[/, '[')
      css_content.gsub!( /\\\]/, ']')

      class_regex = /\.\\?(!?[-_a-zA-Z0-9\[\]]+)(?=[^}]*\{)/
      classes = css_content.scan(class_regex).flatten.uniq.sort

      tailwind_config_path = Rails.root.join('config/tailwind.config.js')

      if tailwind_config_path.exist?
        content_config = <<~CONFIG.strip_heredoc
          #{START_MARKER}
          { raw: '<div class="#{classes.join(' ')}"></div>', extension: 'html' },
          #{END_MARKER} #{TurboMaterial::VERSION}
        CONFIG

        if File.read(tailwind_config_path.to_s).include?(START_MARKER)
          gsub_file tailwind_config_path, /#{Regexp.escape(START_MARKER)}.*?#{Regexp.escape(END_MARKER)}.*?$/m do |match|
            content_config.strip
          end
        else
          insert_into_file tailwind_config_path, after: "content: [" do
            "\n" + content_config.strip
          end
        end
      end
    end
  end
end
